#
#  Author: Hari Sekhon
#  Date: 2020-11-24 13:05:26 +0000 (Tue, 24 Nov 2020)
#
#  https://github.com/harisekhon/Dockerfiles
#
#  License: see accompanying Hari Sekhon LICENSE file
#
#  If you're using my code you're welcome to connect with me on LinkedIn
#  and optionally send me feedback to help improve or steer this or other code I publish
#
#  https://www.linkedin.com/in/harisekhon
#

# ============================================================================ #
#                 T e a m c i t y   G C P   C l o u d b u i l d
# ============================================================================ #

# References:
#
#     https://cloud.google.com/cloud-build/docs/build-config
#
#     https://cloud.google.com/cloud-build/docs/speeding-up-builds
#
#     https://cloud.google.com/cloud-build/docs/building-leaner-containers
#
#     https://cloud.google.com/cloud-build/docs/build-debug-locally


# gcloud builds submit --config cloudbuild.yaml .

# tars $PWD to bucket called ${PROJECT_ID}_cloudbuild

# $PROJECT_ID is auto-populated by Cloud Build

---
# variables - can override these on the CLI:
# --substitutions=_IMAGE_NAME="myapp",_IMAGE_VERSION:"1.1"
substitutions:
  _IMAGE_NAME: teamcity-server
  # requires string, otherwise misinterpreted as float
  _IMAGE_VERSION: "2020.2"
  #_REGISTRY: eu.gcr.io
  _REGISTRY: gcr.io
  # if you hardcode _PROJECT to a shared project, you'll need to switch your GCloud SDK core.project
  # to submit to that project for the GCS permissions
  _PROJECT: $PROJECT_ID

timeout: 300s

# push this image to GCR - doing it this way instead of docker push links the image artifact in GCP Console's Cloud Build UI
images:
  - ${_REGISTRY}/${_PROJECT}/${_IMAGE_NAME}
  # the above pushed all tags to GCR without specifying tags explicitly like this:
  #- gcr.io/${_PROJECT}/${_IMAGE_NAME}:latest
  #- gcr.io/${_PROJECT}/${_IMAGE_NAME}:${_IMAGE_VERSION}

steps:
  # use Docker cloud builder to build image - not available in eu.gcr.io
  - name: gcr.io/cloud-builders/docker
    # multiple tags (all tags get pushed to GCR implicitly via image declaration above)
    args:
      - build
      # use variable tags if triggered:
      # https://cloud.google.com/cloud-build/docs/configuring-builds/substitute-variable-values
      - --tag=${_REGISTRY}/${_PROJECT}/${_IMAGE_NAME}:latest
      - --tag=${_REGISTRY}/${_PROJECT}/${_IMAGE_NAME}:${_IMAGE_VERSION}
      # use all cached layers where possible (will pull, better for seldomly rebuilt images, kaniko cache is better for frequenct as it's local)
      - --cache-from=${_REGISTRY}/${_PROJECT}/${_IMAGE_NAME}:${_IMAGE_VERSION}
      - .
    # or use kaniko builder to cache
    #name: '${_REGISTRY}/kaniko-project/executor:latest'
    #- --destination=${_REGISTRY}/${_PROJECT}/${_IMAGE_NAME}:${_IMAGE_VERSION}
    #- --cache=true
    #- --cache-ttl=6h
    timeout: 300s
